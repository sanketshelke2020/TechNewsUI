@model IEnumerable<TechNewsUI.Models.GetSectionByKeywordDto>
@using TechNewsUI.Models
@{
    ViewData["Title"] = "GetSectionByKeyword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var list = Model.OrderByDescending(x => x.CreatedDate).ToList();
    var distinctCategory = list.Select(x => x.CategoryType).Distinct();
}
<link rel="stylesheet" href="~/css/search.css" asp-append-version="true" />

<div class="main vw-100 d-flex justify-content-center ">
    
</div>
<form asp-action="GetSectionByKeyword" asp-controller="HomePage" method="get">
    <input type="search" value="" placeholder="Search..." name="searchKeyword" />
    <button type="submit" class="btn   btn-lg searchbutton"><i class="bi bi-search"></i></button>
</form>
<h2 class="text-center my-5 vw-100">Search Result</h2>
@foreach (var category in distinctCategory)
{

    <h3 class="heading-secondary">@category</h3>
    <div class="d-flex flex-row flex-nowrap overflow-auto vw-100">
        @foreach (var item in list.Where(x => x.CategoryType == category))
        {
            string actionName = "";
            string controllerName = "";
            switch (category)
            {
                case nameof(CategoryEnum.Article):
                    actionName = "ArticleDetail";
                    controllerName = "Article";
                    break;
                case nameof(CategoryEnum.Youtube):
                    actionName = "YoutubeDetail";
                    controllerName = "Youtube";
                    break;
                case nameof(CategoryEnum.Podcast):
                    actionName = "GetPodcastById";
                    controllerName = "Podcast";
                    break;
                case nameof(CategoryEnum.CaseStudies):
                    actionName = "CaseStudiesDetail";
                    controllerName = "CaseStudie";
                    break;
                case nameof(CategoryEnum.LiveInterview):
                    actionName = "GetLiveInteviewById";
                    controllerName = "LiveInterview";
                    break;
                case nameof(CategoryEnum.Magazine):
                    actionName = "GetMagazineById";
                    controllerName = "Magazine";
                    break;
                case nameof(CategoryEnum.EventSchedule):
                    actionName = "GetEventById";
                    controllerName = "Event";
                    break;
                case nameof(CategoryEnum.Webinar):
                    actionName = "WebinarDetail";
                    controllerName = "Webinar";
                    break;
                default:
                    break;
            }

            <div class="col-lg-4 p-5 col-md-6">
                <div class="card" onclick="location.href = '@(Url.Action(actionName,controllerName, new { SectionMasterId = item.SectionMasterId}))'">
                    <img class="card-img-top w-100" src="@("data:image/png;base64," + Convert.ToBase64String((byte[])item.Image, 0))" />
                    <div class="card-body p-0">
                        <div class="row w-100 m-0 px-1 my-3 card-info text-muted">
                            <div class="col p-0">
                                <span class="time-since">
                                    <script>
                                        document.write(timeSince(new Date("@item.CreatedDate")) + " ago");
                                    </script>
                                </span>
                            </div>
                            <div class="col w-100 text-end p-0">
                                <span class="view">@item.TotalViews <i class="bi bi-eye"></i></span>
                            </div>
                        </div>
                        <h5 class="card-title">@item.Title</h5>
                        <p class="card-text pt-1">@item.ShortDescription</p>
                    </div>
                </div>
            </div>
        }
        <hr />

    </div>
}
