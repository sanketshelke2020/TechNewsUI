@model TechNewsUI.Models.LoginDto

@{
    Layout = null;
}

@{
    if (TempData["ChangedSuccessfully"] != null)
    {
    <div class="alert alert-primary" role="alert">
                     @TempData["ChangedSuccessfully"]
    </div>

    }
}


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/login.css" asp-append-version="true" />
</head>
<body>

<div class="container d-flex justify-content-center align-items-center vw-100 vh-100 p-5">
        <div class="row bg-white w-100" style="box-shadow: rgb(17 12 46 / 20%) 0px 48px 100px 0px;">

            <div class="col h-100 w-100 ">
                <a class="navbar-brand mt-5 d-flex justify-content-center" asp-area="" asp-controller="HomePage" asp-action="GetBreakingNews" style="margin-left:10px;"><img src="~/Image/Tech1.png" height="43px" /></a>

                <div class="mainHeading text-center m-4">
                    <h2>Welcome</h2>
                    <p>Quick news on Tech Newz</p>
                </div>
                
                <div class="form-section">
                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger border-0" role="alert">
                            <i class="bi bi-exclamation-circle-fill"></i> @TempData["Error"]
                        </div>
                    }
                
                <form asp-action="Login" class="">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group my-4">
                        <label asp-for="Email" class="control-label"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Password" class="control-label"></label>
                        <input type="password" asp-for="Password" class="form-control" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                        <a asp-controller="Forget" asp-action="ForgetPassword" class="forget-password text-black float-end my-2">Forget Password</a>
                    <div class="form-group my-5">
                        <input type="submit" value="LogIn" class="btn btn-dark w-100" />
                    </div>
                </form>
                <p class="text-center text-muted or">--or--</p>
                
                    <a class="btn btn-light w-100" asp-action="GuestLogin">Guest Login</a>
                
                
                        <p class="my-3 text-center">Don't have an account ? <a asp-controller="Register" asp-action="AddUser" class="text-dark fw-bold">Register here</a></p>
               
                </div>

            </div>
            <div class="col mainbg ">
            </div>
        </div>
       
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
</body>
</html>
    <link rel="stylesheet" href="~/lib/limonte-sweetalert2/sweetalert2.min.css">
    <script src="~/lib/limonte-sweetalert2/sweetalert2.all.min.js"></script>
    <script src="~/lib/limonte-sweetalert2/sweetalert2.all.js"></script>
    <script src="~/lib/limonte-sweetalert2/sweetalert2.min.js"></script>
@if (TempData["successRegister"] != null)
{


    <script>

        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        Toast.fire({
            icon: 'success',
            title: '@TempData["successRegister"]'
        })
    </script>
}
